generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Form {
  id          String     @id @default(cuid())
  title       String // Título do formulário
  description String? // Descrição do formulário
  creatorId   String // Referência ao usuário criador
  creator     User       @relation(fields: [creatorId], references: [id]) // Relacionamento com o criador (User)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  responses   Response[] // Respostas relacionadas a este formulário
  questions   Question[] // Relacionamento com as perguntas deste formulário
}

model Question {
  id         String   @id @default(cuid())
  formId     String // Referência ao formulário
  title      String // Pergunta do formulário
  type       String // Tipo de pergunta (texto, múltipla escolha, imagem, localização)
  isRequired Boolean  @default(false) // Pergunta obrigatória?
  allowImage Boolean  @default(false) // Permitir upload de imagem?
  order      Int // Ordem da pergunta no formulário
  options    Json?
  form       Form     @relation(fields: [formId], references: [id])
  answers    Answer[] // Respostas para essa pergunta
}

model Answer {
  id             String   @id @default(cuid())
  questionId     String // Referência à pergunta
  responseId     String // Referência à resposta geral
  answerText     String? // Texto da resposta (para perguntas de texto)
  answerImage    String? // Caminho para imagem (para perguntas com imagens)
  answerOption   String? // Resposta selecionada (para múltipla escolha)
  answerLocation String? // Resposta de localização (endereço)
  question       Question @relation(fields: [questionId], references: [id])
  response       Response @relation(fields: [responseId], references: [id])
}

model Response {
  id           String   @id @default(cuid())
  formId       String // Referência ao formulário
  respondentId String // ID do respondente (se aplicável, como um usuário autenticado)
  submittedAt  DateTime @default(now()) // Quando a resposta foi submetida
  form         Form     @relation(fields: [formId], references: [id])
  answers      Answer[] // Respostas de todas as perguntas desse formulário
}

model User {
  id       String @id @default(cuid())
  name     String // Nome do usuário
  email    String @unique // Email do usuário
  password String // Senha do usuário (caso tenha um sistema de login)
  forms    Form[] // Formulários criados pelo usuário
}
